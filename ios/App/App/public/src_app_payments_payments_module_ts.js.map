{"version":3,"sources":["./src/app/payments/payments-routing.module.ts","./src/app/payments/payments.module.ts","./src/app/payments/payments.page.ts","./src/app/payments/payments.page.scss","./src/app/payments/payments.page.html"],"names":[],"mappings":"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","file":"src_app_payments_payments_module_ts.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { PaymentsPage } from './payments.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: PaymentsPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class PaymentsPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { PaymentsPageRoutingModule } from './payments-routing.module';\n\nimport { PaymentsPage } from './payments.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    PaymentsPageRoutingModule\n  ],\n  declarations: [PaymentsPage]\n})\nexport class PaymentsPageModule {}\n","import { Component, OnInit } from '@angular/core';\r\nimport { ApiService } from '../api.service';\r\n\r\n@Component({\r\n  selector: 'app-payments',\r\n  templateUrl: './payments.page.html',\r\n  styleUrls: ['./payments.page.scss'],\r\n})\r\n\r\nexport class PaymentsPage implements OnInit {\r\n\r\n  public paymentData: any = [];\r\n  public pendingpayments: any = [];\r\n  public showCompletedList: boolean = true;\r\n  public no_data: boolean = false;\r\n  public IntervalVar: any;\r\n\r\n  constructor(public apiService: ApiService) { }\r\n\r\n  ngOnInit() {\r\n\r\n  }\r\n\r\n  ionViewDidEnter() {\r\n    let env = this;\r\n    this.GetPaymentDetails();\r\n    this.GetPendingPaymentDetails();\r\n\r\n    this.IntervalVar = setInterval(() => {\r\n      env.GetPaymentDetails();\r\n      env.GetPendingPaymentDetails();\r\n    }, 10000);\r\n  }\r\n\r\n  ionViewDidLeave() {\r\n    clearInterval(this.IntervalVar);\r\n  }\r\n\r\n\r\n  GetPaymentDetails() {\r\n    this.apiService.Common_POST('/completepayment', { providerId: this.apiService.Get_ProviderId() }).subscribe((results) => {\r\n      if (results.statusCode == 200) {\r\n        this.paymentData = results.data;\r\n\r\n        if (this.paymentData.length == 0) {\r\n          this.no_data = true;\r\n        } else {\r\n          this.no_data = false;\r\n        }\r\n      } else {\r\n        this.paymentData = [];\r\n        this.no_data = true;\r\n      }\r\n    }, err => {\r\n      this.apiService.presentToast('Error occured: ' + JSON.stringify(err), 3000);\r\n    });\r\n  }\r\n\r\n  GetPendingPaymentDetails() {\r\n    this.apiService.Common_POST('/pendingpayment', { providerId: this.apiService.Get_ProviderId() }).subscribe((results) => {\r\n      if (results.statusCode == 200) {\r\n        this.pendingpayments = results.data;\r\n\r\n        if (this.pendingpayments.length == 0) {\r\n          this.no_data = true;\r\n        }\r\n      } else {\r\n        this.no_data = true;\r\n      }\r\n    }, err => {\r\n      this.apiService.presentToast('Error occured: ' + JSON.stringify(err), 3000);\r\n    });\r\n  }\r\n\r\n  ionViewWillEnter() {\r\n  }\r\n\r\n  TabChange(change) {\r\n    console.log('cleciked');\r\n    this.showCompletedList = change;\r\n  }\r\n\r\n}\r\n","export default \".tabs-inner {\\n  display: none !important;\\n}\\n\\nion-tab-bar {\\n  min-height: 50px;\\n}\\n\\n.ion-tab-button-left {\\n  border-right: 1px solid #561d5e;\\n}\\n\\nion-list {\\n  overflow: scroll;\\n  margin-top: 80px;\\n}\\n\\n.ion-col-list ion-col {\\n  padding: 0;\\n}\\n\\nion-label {\\n  font-weight: 600;\\n  font-size: 12px !important;\\n  color: #555555 !important;\\n  text-transform: capitalize;\\n}\\n\\nb {\\n  font-size: 12px;\\n  color: black;\\n}\\n\\n.date {\\n  text-align: right;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBheW1lbnRzLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLHdCQUFBO0FBQ0o7O0FBRUE7RUFDSSxnQkFBQTtBQUNKOztBQUVBO0VBQ0ksK0JBQUE7QUFDSjs7QUFFQTtFQUNJLGdCQUFBO0VBQ0EsZ0JBQUE7QUFDSjs7QUFNQTtFQUNJLFVBQUE7QUFISjs7QUFNQTtFQUNJLGdCQUFBO0VBQ0EsMEJBQUE7RUFDQSx5QkFBQTtFQUNBLDBCQUFBO0FBSEo7O0FBTUE7RUFDSSxlQUFBO0VBQ0EsWUFBQTtBQUhKOztBQU1BO0VBQ0ksaUJBQUE7QUFISiIsImZpbGUiOiJwYXltZW50cy5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIudGFicy1pbm5lciB7XHJcbiAgICBkaXNwbGF5OiBub25lICFpbXBvcnRhbnQ7XHJcbn1cclxuXHJcbmlvbi10YWItYmFyIHtcclxuICAgIG1pbi1oZWlnaHQ6IDUwcHg7XHJcbn1cclxuXHJcbi5pb24tdGFiLWJ1dHRvbi1sZWZ0IHtcclxuICAgIGJvcmRlci1yaWdodDogMXB4IHNvbGlkICM1NjFkNWU7XHJcbn1cclxuXHJcbmlvbi1saXN0IHtcclxuICAgIG92ZXJmbG93OiBzY3JvbGw7XHJcbiAgICBtYXJnaW4tdG9wOiA4MHB4O1xyXG59XHJcblxyXG4vLyBpb24tcm93IHtcclxuLy8gICAgIG1hcmdpbjogNXB4IDA7XHJcbi8vIH1cclxuXHJcbi5pb24tY29sLWxpc3QgaW9uLWNvbCB7XHJcbiAgICBwYWRkaW5nOiAwO1xyXG59XHJcblxyXG5pb24tbGFiZWwge1xyXG4gICAgZm9udC13ZWlnaHQ6IDYwMDtcclxuICAgIGZvbnQtc2l6ZTogMTJweCAhaW1wb3J0YW50O1xyXG4gICAgY29sb3I6ICM1NTU1NTUgIWltcG9ydGFudDtcclxuICAgIHRleHQtdHJhbnNmb3JtOiBjYXBpdGFsaXplO1xyXG59XHJcblxyXG5iIHtcclxuICAgIGZvbnQtc2l6ZTogMTJweDtcclxuICAgIGNvbG9yOiBibGFjaztcclxufVxyXG5cclxuLmRhdGUge1xyXG4gICAgdGV4dC1hbGlnbjogcmlnaHQ7XHJcbn0iXX0= */\";","export default \"<ion-header [translucent]=\\\"true\\\">\\r\\n  <ion-toolbar>\\r\\n    <ion-row>\\r\\n      <ion-col col-6>\\r\\n        <ion-title>\\r\\n          <img class=\\\"header-logo\\\" src=\\\"assets/imgs/Icon.png\\\">\\r\\n          <span class=\\\"header-name\\\"> Payments </span>\\r\\n        </ion-title>\\r\\n      </ion-col>\\r\\n      <ion-col col-6 class=\\\"text-right status-user\\\">\\r\\n        <a *ngIf=\\\"apiService.Get_UserStatus() == 'InActive' \\\">\\r\\n          <ion-icon name=\\\"ellipse\\\" class=\\\"status-inactive\\\"> </ion-icon> InActive\\r\\n        </a>\\r\\n        <a *ngIf=\\\"apiService.Get_UserStatus() == 'Active' \\\">\\r\\n          <ion-icon name=\\\"ellipse\\\" class=\\\"status-active\\\"> </ion-icon> Active\\r\\n        </a>\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content>\\r\\n  <ion-tabs>\\r\\n\\r\\n    <!-- Tab bar -->\\r\\n    <ion-tab-bar slot=\\\"top\\\">\\r\\n      <ion-tab-button (click)=\\\"TabChange(true)\\\" class=\\\"ion-tab-button-left\\\">\\r\\n        <ion-icon name=\\\"checkbox\\\"></ion-icon>\\r\\n        <ion-label>Completed</ion-label>\\r\\n      </ion-tab-button>\\r\\n\\r\\n      <ion-tab-button (click)=\\\"TabChange(false)\\\">\\r\\n        <ion-icon name=\\\"list\\\"></ion-icon>\\r\\n        <ion-label>Pending</ion-label>\\r\\n      </ion-tab-button>\\r\\n    </ion-tab-bar>\\r\\n\\r\\n  </ion-tabs>\\r\\n\\r\\n  <ion-list *ngIf=\\\"showCompletedList\\\">\\r\\n\\r\\n    <div class=\\\"no-data-msg\\\" *ngIf=\\\" no_data && paymentData.length==0\\\">\\r\\n      <span> No payment(s) found </span>\\r\\n    </div>\\r\\n\\r\\n    <ion-item lines=\\\"full\\\" *ngFor=\\\"let completedpayment of paymentData\\\">\\r\\n      <ion-grid class=\\\"ion-col-list\\\">\\r\\n        <ion-row>\\r\\n          <ion-col size=\\\"6\\\">\\r\\n            <ion-label class=\\\"ion-text-wrap\\\"><b>Order Id : </b>{{completedpayment.orderId}}</ion-label>\\r\\n          </ion-col>\\r\\n          <ion-col size=\\\"6\\\">\\r\\n            <ion-label class=\\\"ion-text-wrap date\\\"><b>Date : </b>{{apiService.formatDate(completedpayment.date)}}\\r\\n            </ion-label>\\r\\n          </ion-col>\\r\\n        </ion-row>\\r\\n        <ion-row>\\r\\n          <ion-col size=\\\"12\\\">\\r\\n            <ion-label class=\\\"ion-text-wrap\\\"><b>Service Name : </b>{{completedpayment.serviceName}}</ion-label>\\r\\n          </ion-col>\\r\\n        </ion-row>\\r\\n        <ion-row>\\r\\n          <ion-col size=\\\"12\\\">\\r\\n            <ion-label class=\\\"ion-text-wrap\\\"><b>Customer Name : </b>{{completedpayment.customerName}}</ion-label>\\r\\n          </ion-col>\\r\\n        </ion-row>\\r\\n        <ion-row>\\r\\n          <ion-col size=\\\"12\\\">\\r\\n            <ion-label class=\\\"ion-text-wrap\\\"><b>Address : </b>{{completedpayment.address}}</ion-label>\\r\\n          </ion-col>\\r\\n        </ion-row>\\r\\n        <ion-row>\\r\\n          <ion-col size=\\\"6\\\">\\r\\n            <ion-label class=\\\"ion-text-wrap\\\"><b>Your Earning : </b>\\r\\n            </ion-label>\\r\\n          </ion-col>\\r\\n          <ion-col size=\\\"6\\\">\\r\\n            <ion-label class=\\\"ion-text-wrap\\\"><b>Amount : </b>\\r\\n            </ion-label>\\r\\n          </ion-col>\\r\\n        </ion-row>\\r\\n        <ion-row>\\r\\n          <ion-col size=\\\"6\\\">\\r\\n            <ion-label class=\\\"ion-text-wrap\\\">\\r\\n              ₹ {{completedpayment.provider_commission}}\\r\\n            </ion-label>\\r\\n          </ion-col>\\r\\n          <ion-col size=\\\"6\\\">\\r\\n            <ion-label class=\\\"ion-text-wrap\\\">\\r\\n              ₹ {{completedpayment.quotation.amount}}\\r\\n            </ion-label>\\r\\n          </ion-col>\\r\\n        </ion-row>\\r\\n      </ion-grid>\\r\\n    </ion-item>\\r\\n  </ion-list>\\r\\n\\r\\n  <ion-list *ngIf=\\\"!showCompletedList\\\">\\r\\n\\r\\n    <div class=\\\"no-data-msg\\\" *ngIf=\\\" no_data ==true && pendingpayments.length==0\\\">\\r\\n      <span> No pending payment(s) found </span>\\r\\n    </div>\\r\\n\\r\\n    <ion-item lines=\\\"full\\\" *ngFor=\\\"let pendingpayment of pendingpayments\\\">\\r\\n      <ion-grid class=\\\"ion-col-list\\\">\\r\\n        <ion-row>\\r\\n          <ion-col size=\\\"6\\\">\\r\\n            <ion-label class=\\\"ion-text-wrap\\\"><b>Order Id : </b>{{pendingpayment.orderId}}</ion-label>\\r\\n          </ion-col>\\r\\n          <ion-col size=\\\"6\\\">\\r\\n            <ion-label class=\\\"ion-text-wrap date\\\"><b>Date : </b>{{pendingpayment.date}}</ion-label>\\r\\n          </ion-col>\\r\\n        </ion-row>\\r\\n        <ion-row>\\r\\n          <ion-col size=\\\"12\\\">\\r\\n            <ion-label class=\\\"ion-text-wrap\\\"><b>Service Name : </b>{{pendingpayment.serviceName}}</ion-label>\\r\\n          </ion-col>\\r\\n        </ion-row>\\r\\n        <ion-row>\\r\\n          <ion-col size=\\\"12\\\">\\r\\n            <ion-label class=\\\"ion-text-wrap\\\"><b>Customer Name : </b>{{pendingpayment.customerName}}</ion-label>\\r\\n          </ion-col>\\r\\n        </ion-row>\\r\\n        <ion-row>\\r\\n          <ion-col size=\\\"12\\\">\\r\\n            <ion-label class=\\\"ion-text-wrap\\\"><b>Address : </b>{{pendingpayment.address}}</ion-label>\\r\\n          </ion-col>\\r\\n        </ion-row>\\r\\n        <ion-row>\\r\\n          <ion-col size=\\\"6\\\" *ngIf=\\\"pendingpayment.provider_commission\\\">\\r\\n            <ion-label class=\\\"ion-text-wrap\\\"><b>Your Earning : </b>\\r\\n            </ion-label>\\r\\n          </ion-col>\\r\\n          <ion-col size=\\\"6\\\" *ngIf=\\\"pendingpayment.quotation.amount\\\">\\r\\n            <ion-label class=\\\"ion-text-wrap\\\"><b>Amount : </b>\\r\\n            </ion-label>\\r\\n          </ion-col>\\r\\n        </ion-row>\\r\\n        <ion-row>\\r\\n          <ion-col size=\\\"6\\\" *ngIf=\\\"pendingpayment.provider_commission\\\">\\r\\n            <ion-label class=\\\"ion-text-wrap\\\">\\r\\n              ₹ {{pendingpayment.provider_commission}}\\r\\n            </ion-label>\\r\\n          </ion-col>\\r\\n          <ion-col size=\\\"6\\\" *ngIf=\\\"pendingpayment.quotation.amount\\\">\\r\\n            <ion-label class=\\\"ion-text-wrap\\\">\\r\\n              ₹ {{pendingpayment.quotation.amount}}\\r\\n            </ion-label>\\r\\n          </ion-col>\\r\\n        </ion-row>\\r\\n      </ion-grid>\\r\\n    </ion-item>\\r\\n  </ion-list>\\r\\n\\r\\n\\r\\n</ion-content>\";"],"sourceRoot":"webpack:///"}